allprojects {
  repositories {
    jcenter()
  }
}

ext {
  //Android
  androidBuildToolsVersion = "24.0.2"
  androidMinSdkVersion = 15
  androidTargetSdkVersion = 24
  androidCompileSdkVersion = 24

  //Libraries
  supportAndroid = '24.2.1'
  daggerVersion = '2.0.2'
  finestwebview = '1.2.5'
  javaxInjectVersion = '1'
  butterKnifeVersion = '7.0.1'
  glideVersion = '3.7.0'
  rxJavaVersion = '1.1.2'
  rxAndroidVersion = '1.1.0'
  javaxAnnotationVersion = '1.0'
  gsonVersion = '2.3'
  retrofitVersion = '2.0.2'
  realm = '0.88.3'


  //Testing
  robolectricVersion = '3.1-SNAPSHOT'
  jUnitVersion = '4.12'
  assertJVersion = '1.7.1'
  mockitoVersion = '1.9.5'
  dexmakerVersion = '1.0'
  espressoVersion = '2.0'
  testingSupportLibVersion = '0.1'
  powermock = '1.6.4'

  //Logs
  timber = '4.1.2'

  //Development
  leakCanaryVersion = '1.4-beta2'

  presentationDependencies = [
      supportAppcompat:   "com.android.support:appcompat-v7:${supportAndroid}",
      supportDesing   : "com.android.support:design:${supportAndroid}",
      recyclerView    : "com.android.support:recyclerview-v7:${supportAndroid}",
      daggerCompiler  : "com.google.dagger:dagger-compiler:${daggerVersion}",
      dagger          : "com.google.dagger:dagger:${daggerVersion}",
      butterKnife     : "com.jakewharton:butterknife:${butterKnifeVersion}",
      glide           : "com.github.bumptech.glide:glide:${glideVersion}",
      rxJava          : "io.reactivex:rxjava:${rxJavaVersion}",
      rxAndroid       : "io.reactivex:rxandroid:${rxAndroidVersion}",
      javaxAnnotation : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
      timber          : "com.jakewharton.timber:timber:${timber}",
      finestwebview   : "com.thefinestartist:finestwebview:${finestwebview}"
  ]

  presentationTestDependencies = [
      mockito          :            "org.mockito:mockito-core:${mockitoVersion}",
      dexmaker         :           "com.google.dexmaker:dexmaker:${dexmakerVersion}",
      dexmakerMockito  :    "com.google.dexmaker:dexmaker-mockito:${dexmakerVersion}",
      espresso         :           "com.android.support.test.espresso:espresso-core:${espressoVersion}",
      testingSupportLib: "com.android.support.test:testing-support-lib:${testingSupportLibVersion}"
  ]

  domainDependencies = [
      daggerCompiler :     "com.google.dagger:dagger-compiler:${daggerVersion}",
      javaxInject    :        "javax.inject:javax.inject:${javaxInjectVersion}",
      javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
      rxJava         : "io.reactivex:rxjava:${rxJavaVersion}"
  ]

  domainTestDependencies = [
      junit  :              "junit:junit:${jUnitVersion}",
      mockito: "org.mockito:mockito-core:${mockitoVersion}"
  ]

  dataDependencies = [
      daggerCompiler:     "com.google.dagger:dagger-compiler:${daggerVersion}",
      dagger            :             "com.google.dagger:dagger:${daggerVersion}",
      realm             :              "io.realm:realm-android:${realm}",
      retrofit          :           "com.squareup.retrofit2:retrofit:${retrofitVersion}",
      retrofitGson      :       "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
      rxJava            :             "io.reactivex:rxjava:${rxJavaVersion}",
      rxAndroid         :          "io.reactivex:rxandroid:${rxAndroidVersion}",
      javaxAnnotation   :    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
      androidAnnotations: "com.android.support:support-annotations:${supportAndroid}"

  ]

  dataTestDependencies = [
      junit          :              "junit:junit:${jUnitVersion}",
      assertj        :            "org.assertj:assertj-core:${assertJVersion}",
      mockito        :            "org.mockito:mockito-core:${mockitoVersion}",
      robolectric    :        "org.robolectric:robolectric:${robolectricVersion}",
      powermockJunit : "org.powermock:powermock-module-junit4:${powermock}",
      powermockRule  : "org.powermock:powermock-module-junit4-rule:${powermock}",
      powermock      : "org.powermock:powermock-api-mockito:${powermock}",
      powermockStream: "org.powermock:powermock-classloading-xstream:${powermock}"
  ]

  developmentDependencies = [leakCanary: "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}"
  ]
}
